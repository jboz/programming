<?xml version="1.0" encoding="UTF-8" standalone="no"?><templates><template autoinsert="true" context="java" deleted="false" description="" enabled="true" name="add">&#13;
    public void add${attribut}(final ${attribut_type} ${attribut}) {&#13;
        if (${attribut}s == null) {&#13;
            ${attribut}s = new Hash${array_type}&lt;${attribut_type}&gt;();&#13;
        }&#13;
        this.${cursor}${attribut}s.add(${attribut});&#13;
    }</template><template autoinsert="true" context="java" deleted="false" description="" enabled="true" name="entityDef">@Component("${enclosing_type}")&#13;
@Scope("prototype")&#13;
@Cache(usage = CacheConcurrencyStrategy.NONSTRICT_READ_WRITE)</template><template autoinsert="true" context="java" deleted="false" description="" enabled="true" name="eqHash">    @Override&#13;
    public boolean equals(final Object obj) {&#13;
        if (this == obj) {&#13;
            return true;&#13;
        }&#13;
        if (obj == null) {&#13;
            return false;&#13;
        }&#13;
        if (!(obj instanceof ${enclosing_type})) {&#13;
            return false;&#13;
        }&#13;
        final ${enclosing_type} other = (${enclosing_type}) obj;&#13;
        if (getId() == null) {&#13;
            if (other.getId() != null) {&#13;
                return false;&#13;
            }&#13;
            // les 2 id sont null, on va tester les autres champs&#13;
            return EqualsBuilder.reflectionEquals(obj, other);&#13;
            &#13;
        }&#13;
		// compare les ids&#13;
        return getId().equals(other.getId());&#13;
    }&#13;
&#13;
    @Override&#13;
    public int hashCode() {&#13;
        return new HashCodeBuilder().append(getId()).toHashCode();&#13;
    }</template><template autoinsert="true" context="java" deleted="false" description="" enabled="true" name="eqHash-code">    @Override&#13;
    public boolean equals(Object obj) {&#13;
        if (obj == null) {&#13;
            return false;&#13;
        }&#13;
        if (! (obj instanceof ${enclosing_type})) {&#13;
            return false;&#13;
        }&#13;
        final ${enclosing_type} other = (${enclosing_type}) obj;&#13;
&#13;
		// clé métier&#13;
        return new EqualsBuilder().append(this.getCode(), other.getCode()).isEquals();&#13;
    }&#13;
&#13;
    @Override&#13;
    public int hashCode() {&#13;
		// clé métier&#13;
        return new HashCodeBuilder().append(this.getCode()).toHashCode();&#13;
    }</template><template autoinsert="true" context="java" deleted="false" description="" enabled="true" name="id">    @SequenceGenerator(name = ${enclosing_type}.GENERATOR, sequenceName = "GGR_${tableName}_SEQ")&#13;
    static final String GENERATOR = "${enclosing_type}Seq";&#13;
&#13;
    /**&#13;
     * Identifiant technique.&#13;
     */&#13;
    @Id&#13;
    @Column(name = "ID_${tableName}")&#13;
    @GeneratedValue(generator = ${enclosing_type}.GENERATOR, strategy = GenerationType.SEQUENCE)&#13;
    private Long id;</template><template autoinsert="true" context="java" deleted="false" description="" enabled="true" name="id-gen">    @GenericGenerator(name = ${enclosing_type}.GENERATOR, strategy = "com.boiron.framework.domain.sequence.SequenceGenerator", parameters = { @Parameter(name = "sequence", value = "REF_${tableName}_SEQ") })&#13;
    static final String GENERATOR = "${enclosing_type}Seq";&#13;
&#13;
    /**&#13;
     * Identifiant technique.&#13;
     */&#13;
    @Id&#13;
    @Column(name = "ID_${tableName}")&#13;
    @GeneratedValue(generator = ${enclosing_type}.GENERATOR, strategy = GenerationType.AUTO)&#13;
    private Long id;</template><template autoinsert="true" context="java" deleted="false" description="" enabled="true" name="roles">// gestion ${detail}&#13;
public static final String ${type}_CONSULT = "ROLE_${type}_CONSULT";&#13;
public static final String ${type}_MODIF = "ROLE_${type}_MODIF";&#13;
&#13;
// TODO copier ces lignes dans le fichier HAB_ROLE.ctl et renseigner les ids&#13;
// TODO faire le lien ROLE &lt;-&gt; PROFIL dans le fichier HAB_PROFIL_ROLE.ctl&#13;
;ROLE_${type}_CONSULT;Consultation ${detail};1;A;1;01/01/2010 00:00:00;${user};01/01/2010 00:00:00;${user}&#13;
;ROLE_${type}_MODIF;Modification ${detail};1;A;1;01/01/2010 00:00:00;${user};01/01/2010 00:00:00;${user}&#13;
</template><template autoinsert="true" context="java" deleted="false" description="" enabled="true" name="unmodifiable">public ${array_type}&lt;${return_type}&gt; get${attribut}() {&#13;
    if (${cursor}${attribut} == null) {&#13;
        return null;&#13;
    }&#13;
    return Collections.unmodifiable${array_type}(${attribut});&#13;
}</template></templates>